---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"
  block:
    - ansible.builtin.set_fact:
        ac_config_name: "test_ac_config-{{ 99999 | random }}"
        tag_value: "site-{{ 999999 | random | string }}"

    - name: Create Anycast Configuration
      infoblox.universal_ddi.anycast_config:
        name: "{{ ac_config_name }}"
        anycast_ip_address: "10.0.0.0"
        service: "DNS"
        tags:
          location: "{{ tag_value }}"
        state: "present"
      register: ac_config

    - name: Get Information about the Anycast Configuration by ID
      infoblox.universal_ddi.anycast_config_info:
        id: "{{ ac_config.id }}"
      register: ac_config_info
    - assert:
        that:
         - ac_config_info.objects | length == 1
         - ac_config_info.objects[0].name == ac_config_name
         - ac_config_info.objects[0].id == ac_config.id

    - name: Get Information about the Anycast Configuration by service and name
      infoblox.universal_ddi.anycast_config_info:
        service: "DNS"
        name: "{{ ac_config_name }}"
      register: ac_config_info
    - assert:
        that:
            - ac_config_info.objects | length == 1
            - ac_config_info.objects[0].id == ac_config.id
            - ac_config_info.objects[0].name == ac_config_name

    - name: Get Anycast Configuration information by tag filters
      infoblox.universal_ddi.anycast_config_info:
        tag_filters:
          location: "{{ tag_value }}"
      register: ac_config_info
    - assert:
        that:
            - ac_config_info.objects | length == 1
            - ac_config_info.objects[0].id == ac_config.id
            - ac_config_info.objects[0].tags.location == tag_value

    - name: Get Anycast Configuration information by tag filter query
      infoblox.universal_ddi.anycast_config_info:
          tag_filter_query: "location=='{{ tag_value }}'"
      register: ac_config_info
    - assert:
        that:
            - ac_config_info.objects | length == 1
            - ac_config_info.objects[0].id == ac_config.id
            - ac_config_info.objects[0].tags.location == tag_value

  always:
    - name: Delete Anycast Configuration
      infoblox.universal_ddi.anycast_config:
        name: "{{ ac_config_name }}"
        anycast_ip_address: "10.0.0.0"
        service: "DNS"
        state: "absent"
      ignore_errors: true
