---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"

  block:
    - ansible.builtin.set_fact:
        ha_group_name: "test-ha-group-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    - name: Get DHCP Host 1 information by filters
      infoblox.universal_ddi.dhcp_host_info:
        filters:
          name: "TF_TEST_HOST_03"
      register: host_info_1
    - assert:
        that:
          - host_info_1.objects[0].name == "TF_TEST_HOST_03"

    - name: Get DHCP Host 2 information by filters
      infoblox.universal_ddi.dhcp_host_info:
        filters:
          name: "TF_TEST_HOST_01"
      register: host_info_2
    - assert:
        that:
          - host_info_2.objects[0].name == "TF_TEST_HOST_01"

    - name: Get DHCP Host 3 information by filters
      infoblox.universal_ddi.dhcp_host_info:
        filters:
          name: "TF_TEST_HOST_02"
      register: host_info_3
    - assert:
        that:
          - host_info_3.objects[0].name == "TF_TEST_HOST_02"

    - name: Create DHCP HA Group (check mode)
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-active"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
      check_mode: true
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group.failed == false
          - dhcp_ha_group_info.objects | length == 0

    - name: Create DHCP HA Group
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-active"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects | length == 1

    - name: Update DHCP HA Group
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-active"
        comment: "update comment"
        state: present
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
            filters:
              name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects | length == 1
          - dhcp_ha_group_info.objects[0].comment == "update comment"

    - name: Update DHCP HA Group (idempotent)
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        comment: "update comment"
        mode: "active-active"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
          filters:
             name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is not changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects | length == 1
          - dhcp_ha_group_info.objects[0].comment == "update comment"


    - name: Delete DHCP HA Group (check mode)
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
        state: absent
      check_mode: true
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed

    - name: Delete DHCP HA Group
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
        state: absent
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects | length == 0

    - name: Delete DHCP HA Group (idempotent)
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
        state: absent
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
          filters:
            name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is not changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects | length == 0

    - name: Create a DHCP HA Group with comment
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-active"
        comment: "test comment"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_2.objects[0].id }}"
            role: "active"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects[0].comment == "test comment"

    - name: Update a DHCP HA Group host
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-active"
        comment: "test comment"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_3.objects[0].id }}"
            role: "active"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects[0].hosts | length == 2
          - dhcp_ha_group_info.objects[0].mode == "active-active"
          - dhcp_ha_group_info.objects[0].hosts[0].host == host_info_1.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[1].host == host_info_3.objects[0].id

    - name: Update a DHCP HA Group host with mode as active-passive
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-passive"
        comment: "test comment"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_3.objects[0].id }}"
            role: "passive"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects[0].hosts | length == 2
          - dhcp_ha_group_info.objects[0].mode == "active-passive"
          - dhcp_ha_group_info.objects[0].hosts[0].host == host_info_1.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[1].host == host_info_3.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[0].role == "active"
          - dhcp_ha_group_info.objects[0].hosts[1].role == "passive"

    - name: Update a DHCP HA Group host with tags
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "active-passive"
        comment: "test comment"
        tags:
          location: "{{ tag_value }}"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_3.objects[0].id }}"
            role: "passive"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects[0].hosts | length == 2
          - dhcp_ha_group_info.objects[0].mode == "active-passive"
          - dhcp_ha_group_info.objects[0].hosts[0].host == host_info_1.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[1].host == host_info_3.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[0].role == "active"
          - dhcp_ha_group_info.objects[0].hosts[1].role == "passive"
          - dhcp_ha_group_info.objects[0].tags.location ==  tag_value

    - name: Create a DHCP HA Group host with mode anycast
      infoblox.universal_ddi.dhcp_ha_group:
        name: "{{ ha_group_name }}"
        mode: "anycast"
        anycast_config_id: "{{ _ac_config.id }}"
        comment: "test comment"
        tags:
          location: "{{ tag_value }}"
        hosts:
          - host: "{{ host_info_1.objects[0].id }}"
            role: "active"
          - host: "{{ host_info_3.objects[0].id }}"
            role: "passive"
      register: dhcp_ha_group
    - name: Get DHCP HA Group Information
      infoblox.universal_ddi.dhcp_ha_group_info:
        filters:
          name: "{{ ha_group_name }}"
      register: dhcp_ha_group_info
    - assert:
        that:
          - dhcp_ha_group is changed
          - dhcp_ha_group_info is not failed
          - dhcp_ha_group_info.objects[0].hosts | length == 2
          - dhcp_ha_group_info.objects[0].mode == "anycast"
          - dhcp_ha_group_info.objects[0].hosts[0].host == host_info_1.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[1].host == host_info_3.objects[0].id
          - dhcp_ha_group_info.objects[0].hosts[0].role == "active"
          - dhcp_ha_group_info.objects[0].hosts[1].role == "passive"
          - dhcp_ha_group_info.objects[0].tags.location ==  tag_value

  always:
    # Cleanup if the test fails
      - name: "Delete DHCP HA Group"
        infoblox.universal_ddi.dhcp_ha_group:
          name: "{{ ha_group_name }}"
          hosts:
            - host: "{{ host_info_1.objects[0].id }}"
              role: "active"
            - host: "{{ host_info_3.objects[0].id }}"
              role: "active"
          state: absent
        ignore_errors: true

      - name: "Delete DHCP anycast config"
        ansible.builtin.include_role:
          name: setup_anycast_config
          tasks_from: cleanup.yml
