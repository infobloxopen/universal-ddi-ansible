---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"
  block:
    - name: "Create an Address Block"
      infoblox.universal_ddi.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        tags:
          environment: "test"
          location: "site-1"
        state: "present"
      register: address_block

    - name: Get Next Available Address Block Information by ID and default Count
      infoblox.universal_ddi.ipam_next_available_address_block_info:
          id: "{{ address_block.id }}"
          cidr: 20
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block_info is not failed
          - next_available_address_block_info.objects | length == 1

    - name: Get Next Available Address Block Information by ID and Count
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        id: "{{ address_block.id }}"
        cidr: 24
        count: 5
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block_info is not failed
          - next_available_address_block_info.objects | length == 5

    - name: Get Next Available Address Block Information by tag filters
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        tag_filters:
          environment: "test"
        cidr: 20
        count: 1
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block_info is not failed
          - next_available_address_block_info.objects | length == 1
    
    - name: Get Next Available Address Block Information by multiple tag filters
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        tag_filters:
          environment: "test"
          location: "site-1"
        cidr: 28
        count: 2
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block_info is not failed
          - next_available_address_block_info.objects | length > 0
    
    - name: Get Next Available Address Block Information by non-existent tag filters
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        tag_filters:
          environment: "production"
        cidr: 28
        count: 1
      register: next_available_address_block_info
      ignore_errors: true
    - assert:
        that:
          - next_available_address_block_info is failed
          - "'No address block found with the given tags' in next_available_address_block_info.msg"
    
    - name: Get Next Available Address Block Information with tag filters requesting too many blocks
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        tag_filters:
          environment: "test"
        cidr: 24
        count: 25  # Greater than the allowed maximum of 20
      register: next_available_address_block_info
      ignore_errors: true
    - assert:
        that:
          - next_available_address_block_info is failed
          - "'count must be between 1 and 20.' in next_available_address_block_info.msg"

    - name: Get Next Available Address Block Information with count greater than 20
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        id: "{{ address_block.id }}"
        cidr: 24
        count: 25  # Greater than the allowed maximum of 20
      register: next_available_address_block_info
      ignore_errors: true
    - assert:
        that:
          - next_available_address_block_info is failed
          - "'count must be between 1 and 20.' in next_available_address_block_info.msg"

    - name: "Create a first Address Block with the same tags but smaller capacity"
      infoblox.universal_ddi.ipam_address_block:
        address: "172.16.0.0/27"
        space: "{{ _ip_space.id }}"
        tags:
          environment: "test"
          location: "site-2"
        state: "present"
      register: small_tagged_address_block
      
    - name: "Create a second Address Block with the same tags"
      infoblox.universal_ddi.ipam_address_block:
        address: "172.17.0.0/27"
        space: "{{ _ip_space.id }}"
        tags:
          environment: "test"
          location: "site-2"
        state: "present"
      register: third_tagged_address_block
    
    - name: Get Next Available Address Block Information across multiple blocks with same tags
      infoblox.universal_ddi.ipam_next_available_address_block_info:
        tag_filters:
          environment: "test"
          location: "site-2"
        cidr: 30
        count: 15  # Should require combining results from multiple blocks
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block_info is not failed
          - next_available_address_block_info.objects | length == 15

  always:
    # Cleanup if the test fails
    - ansible.builtin.include_role:
        name: setup_ip_space
        tasks_from: cleanup.yml
