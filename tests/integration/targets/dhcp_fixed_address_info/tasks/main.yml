---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"

  block:
    # Create a random name and tag value to avoid conflicts
    - ansible.builtin.set_fact:
        name: "test-fixed-address-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    # Create a Fixed Address
    - name: Create a Fixed Address
      infoblox.universal_ddi.dhcp_fixed_address:
        address: "10.0.0.1"
        name: "{{ name }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        ip_space: "{{ _ip_space.id }}"
        tags:
          location: "{{ tag_value }}"
        state: "present"
      register: fixed_address

    - name: Get Fixed Address information
      infoblox.universal_ddi.dhcp_fixed_address_info:
        filters:
          address: "10.0.0.1"
          ip_space: "{{ _ip_space.id }}"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length == 1
          - fixed_address_info.objects[0].id == fixed_address.id
          - fixed_address_info.objects[0].address == fixed_address.object.address

    - name: Get Fixed Address information by ID
      infoblox.universal_ddi.dhcp_fixed_address_info:
        id: "{{ fixed_address.id }}"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length == 1
          - fixed_address_info.objects[0].id == fixed_address.id
          - fixed_address_info.objects[0].address == fixed_address.object.address

    - name: Get Fixed Address information by name
      infoblox.universal_ddi.dhcp_fixed_address_info:
        filters:
          name: "{{ name }}"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length == 1
          - fixed_address_info.objects[0].id == fixed_address.id
          - fixed_address_info.objects[0].address == fixed_address.object.address

    - name: Get Fixed Address information by tag_filters
      infoblox.universal_ddi.dhcp_fixed_address_info:
        tag_filters:
          location: "{{ tag_value }}"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length == 1

    - name: Get Fixed Address information by match type
      infoblox.universal_ddi.dhcp_fixed_address_info:
        filters:
          match_type: "mac"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length != 0

    - name: Get Fixed Address information by filter query
      infoblox.universal_ddi.dhcp_fixed_address_info:
        filter_query: "ip_space=='{{ _ip_space.id }}' and address=='10.0.0.1'"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address_info.objects | length == 1
          - fixed_address_info.objects[0].id == fixed_address.id

  always:
    - name: Delete IP Space
      ansible.builtin.include_role:
        name: setup_ip_space
        tasks_from: cleanup.yml
